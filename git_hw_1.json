JSON _Merzantov


 4. Создать внешний репозиторий c названием JSON.
 // Recent Repositories + new + json a README file + create repository
 
 5. Клонировать репозиторий JSON на локальный компьютер.
// code - Http - copy Link 
 git clone (ctrl +v)
 
 6. Внутри локального JSON создать файл “new.json”.
 // cd json
    touch new.json
 
 7. Добавить файл под гит.
 // git add new.json
 
 8. Закоммитить файл.
 // git commit -m "add new json file"
 
 9. Отправить файл на внешний GitHub репозиторий.
 // git push
 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 // vim new.json
    insert
    {
        "St1":"Full name",
        "St2":"Age",
        "St3":"Animals",
        "St4":"Salary
    }
        Esc + :wq

 11. Отправить изменения на внешний репозиторий.
 // git add new.json
    git commit -m "add new text in json file"
    git push

 12. Создать файл preferences.json
 //touch preferenses.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
//
 {
        "Films":"Bloody sport",
        "Serials":"Game of thrones",
        "Food":"Ice Cream",
        "Seasons": "Summer",
        "Country":"Russia"

 }
 
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 //
        touch skills.json
        vim skills.json
        insert
{
    "Skils1":"1",
    "Skills2":"2",
    "Skills3":"3",
    "Skills4":"4"
    
}
        Esc + :wq
    
 
 15. Отправить сразу 2 файла на внешний репозиторий.
//
        git add preferenses.json skills.json
        git commit -m "add 2 new  json file"
        git push

 16. На веб интерфейсе создать файл bug_report.json.
 //
        add mew file - create new file - bug_report.json
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 //
            Commit new file
 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 //
    Click on the bug_report.json Edit file modify bug_report.json
 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 //
        Commit changes
 
 20. Синхронизировать внешний и локальный репозиторий JSON
 //
            git pull
